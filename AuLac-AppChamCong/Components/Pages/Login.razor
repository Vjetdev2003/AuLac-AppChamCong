@page "/"
@page "/login"
@using AuLac_AppChamCong.Models
@using AuLac_AppChamCong.Services
@using System.Text.Json
@inject IJSRuntime JS
@inject AccountServices logincheck

<section class="vh-100 d-flex flex-column justify-content-center align-items-center" style="background-image: url('chamcong.jpg'); background-size: cover; background-position: center;">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="card login-card p-4">
                    <div class="card-body text-center">

                        <img src="logo.jpg" alt="Logo" class="logo">

                        <div class="form-outline mb-3">
                            <input class="form-control form-control-lg" placeholder="Tên Đăng Nhập" required @bind="userId">
                        </div>

                        <div class="form-outline mb-3">
                            <input type="password" id="password" class="form-control form-control-lg" placeholder="Nhập Mật Khẩu" required
                                   @bind="userPassword">
                        </div>

                        <div class="form-check d-flex justify-content-start mb-3">
                            <input class="form-check-input me-2" type="checkbox" @bind="rememberMe">
                            <label class="form-check-label" for="rememberMe"> Nhớ Mật Khẩu </label>
                        </div>

                        <!-- Hiển thị thông báo lỗi -->
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <p class="text-danger">@errorMessage</p>
                        }

                        <button class="btn btn-primary btn-lg w-100" @onclick="HandleLogin">Đăng Nhập</button>
                        <p class="mt-3">Hỗ trợ <a href="#" class="text-primary">012345678</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {
    private bool rememberMe = false;
    private string errorMessage = string.Empty;
    private string userId;
    private string userPassword;

    string a;
    UserTraVe test = new();
    UserAccount account = new();

    [Inject] private NavigationManager Navigation { get; set; } = default!;

    // Khi component khởi tạo, kiểm tra và điền thông tin từ localStorage
    protected override async Task OnInitializedAsync()
    {
        userId = await JS.InvokeAsync<string>("localStorage.getItem", "rememberedUserId");
        userPassword = await JS.InvokeAsync<string>("localStorage.getItem", "rememberedPassword");
        if(!string.IsNullOrEmpty(userId) && !string.IsNullOrEmpty(userPassword))
        {
            rememberMe = true;
        };
    }

    private async Task HandleLogin()
    {
        try
            {
            var test = await logincheck.CheckLogin(userId, userPassword);

            if (test != null && test.success && test.data != null)
            {
                account = test.data.user;
                string token = test.data.token;

                await JS.InvokeVoidAsync("localStorage.setItem", "userId", userId);
                await JS.InvokeVoidAsync("localStorage.setItem", "hspName", account.HspName);
                a = JsonSerializer.Serialize(account);
                await JS.InvokeVoidAsync("localStorage.setItem", "account", a);
                await JS.InvokeVoidAsync("localStorage.setItem", "token", token);

                if (rememberMe)
                {
                    await JS.InvokeVoidAsync("localStorage.setItem", "rememberedUserId", userId);
                    await JS.InvokeVoidAsync("localStorage.setItem", "rememberedPassword", userPassword);
                    Console.WriteLine("Đã lưu thông tin đăng nhập!");
                }
                else
                {
                    // Nếu không chọn "Nhớ mật khẩu", xóa dữ liệu đã lưu
                    await JS.InvokeVoidAsync("localStorage.removeItem", "rememberedUserId");
                    await JS.InvokeVoidAsync("localStorage.removeItem", "rememberedPassword");
                    Console.WriteLine("Đã xóa thông tin nhớ mật khẩu!");
                }

                // Điều hướng sau khi đăng nhập thành công
                Navigation.NavigateTo("/home");
            }
            else
            {
                await JS.InvokeVoidAsync("alert", test?.message ?? "Lỗi đăng nhập!");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Lỗi hệ thống: {ex.Message}");
        }
    }
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
