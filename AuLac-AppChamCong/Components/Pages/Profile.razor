@page "/profile"
@using AuLac_AppChamCong.Connect
@using AuLac_AppChamCong.Models
@using Newtonsoft.Json
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS
<div class="profile-container">
    <!-- Nút quay lại với chữ "Thông tin cá nhân" -->
    <div class="profile-title">
        <button class="back-btn" @onclick="GoBack">
            <i class="fas fa-arrow-left"></i>
        </button>
        <h1 class="page-title">Thông tin cá nhân</h1>
    </div>

    <!-- Header -->
    <div class="profile-header">
        <div class="profile-image">
            <img src="https://upload.wikimedia.org/wikipedia/commons/3/33/Vanamo_Logo.png" alt="Profile Image" class="profile-img" />
        </div>
        <div class="profile-info">
            <h2 class="profile-name">@userProfile?.PsnName</h2>
            <p class="profile-position">@userProfile?.PsnPlace</p>
        </div>
    </div>

    <!-- Thông tin cá nhân -->
    <div class="profile-details">
        <div class="profile-detail-item">
            <span class="detail-label"><i class="fas fa-calendar-alt"></i> Ngày sinh</span>
            <p class="profile-detail">@userProfile?.PsnBirthday?.ToString("dd/MM/yyyy")</p>
        </div>
        <div class="profile-detail-item">
            <span class="detail-label"><i class="fas fa-phone"></i> Số điện thoại</span>
            <p class="profile-detail">@userProfile?.PsnPhone</p>
        </div>
        <div class="profile-detail-item">
            <span class="detail-label"><i class="fas fa-map-marker-alt"></i> Đơn vị</span>
            <p class="profile-detail">@hspName</p>
        </div>
        <div class="profile-detail-item">
            <span class="detail-label"><i class="fas fa-map-marker-alt"></i> Địa chỉ</span>
            <p class="profile-detail">@userProfile?.PsnAddr</p>
        </div>
    </div>
</div>

@code {
    private ApiContext apiConnect = new();
    private Personnels userProfile = new();
    private string psnPrkID;
    private string PsnName = "";
    private string hspName = "";

    protected override async Task OnInitializedAsync()
    {
        var token = await JS.InvokeAsync<string>("localStorage.getItem", "token");

        if (string.IsNullOrEmpty(token))
        {
            Navigation.NavigateTo("/login");
            return;
        }
        await GetUserProfile(token);
    }

    private async Task GetUserProfile(string token)
    {
        try
        {
            string account = await JS.InvokeAsync<string>("localStorage.getItem", "account");

            if (!string.IsNullOrEmpty(account))
            {
                var accountObj = JsonConvert.DeserializeObject<UserAccount>(account);
                if (accountObj == null)
                {
                    Console.WriteLine("Lỗi: Không thể parse dữ liệu từ localStorage.");
                    return;
                }

                // Gán giá trị vào biến toàn cục
                psnPrkID = accountObj.PsnPrkID;
                hspName = accountObj.HspName ?? "";


                var response = await Http.GetAsync($"{apiConnect.apiaulac}/Profile/{psnPrkID}");

                if (response.IsSuccessStatusCode)
                {
                    var profileJson = await response.Content.ReadAsStringAsync();
                    Console.WriteLine($"Response từ API: {profileJson}");

                    // Gán giá trị vào `userProfile`
                    userProfile = JsonConvert.DeserializeObject<Personnels>(profileJson) ?? new Personnels();

                    // Cập nhật giao diện
                    StateHasChanged();
                }
                else
                {
                    Console.WriteLine($"Lỗi khi lấy thông tin profile: {response.StatusCode} - {await response.Content.ReadAsStringAsync()}");
                }
            }
            else
            {
                Console.WriteLine("Không tìm thấy thông tin account trong localStorage.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi: {ex.Message}");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/home");
    }
}


<style>
    /* Container chính */
    .profile-container {
        max-width: 900px;
        margin: 20px auto;
        padding: 30px;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        position: relative;
    }

    /* Tiêu đề trang */
    .profile-title {
        display: flex;
        align-items: center;
        gap: 15px; /* Khoảng cách giữa nút back và chữ */
        margin-bottom: 20px;
    }

    .back-btn {
        padding: 8px;
        font-size: 18px;
        color: #000;
        background: none;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: color 0.3s ease;
    }

        .back-btn i {
            font-size: 18px;
        }

    .page-title {
        font-size: 24px;
        font-weight: bold;
        color: #333;
        margin: 0;
        padding-left:20px;  
    }

    /* Header */
    .profile-header {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 30px;
        border-bottom: 2px solid #e0e0e0;
        animation: fadeIn 0.5s ease-in-out;
    }

    .profile-image {
        margin-bottom: 20px;
        position: relative;
    }

    .profile-img {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        border: 4px solid #007bff;
        box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
        transition: transform 0.3s ease;
    }

        .profile-img:hover {
            transform: scale(1.05);
        }

    .profile-info {
        text-align: center;
    }

    .profile-name {
        font-size: 28px;
        font-weight: bold;
        color: #333;
        margin: 0;
        letter-spacing: 0.5px;
    }

    .profile-position {
        font-size: 16px;
        color: #777;
        margin-top: 5px;
    }

    /* Thông tin chi tiết */
    .profile-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 40px;
    }

    .profile-detail-item {
        display: flex;
        align-items: center;
        background: #fff;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .profile-detail-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

    .detail-label {
        font-weight: bold;
        color: #495057;
        font-size: 16px;
        display: flex;
        align-items: center;
        gap: 8px;
        margin-right: 30px;
        min-width: 120px;
    }

        .detail-label i {
            font-size: 18px;
            color: #495057;
        }

    .profile-detail {
        font-size: 16px;
        color: #555;
        margin: 0;
        flex: 1;
        text-align: right;
    }

    /* Nút hành động */
    .profile-actions {
        display: flex;
        justify-content: center;
        padding: 0 0 20px 0;
    }

    .btn {
        padding: 12px 25px;
        font-size: 16px;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .logout-btn {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: #fff;
        width: 15vw;
        max-width: 150px;
    }

        .logout-btn:hover {
            background: linear-gradient(135deg, #c82333, #a71d2a);
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(220, 53, 69, 0.3);
        }

    /* Responsive */
    @@media (max-width: 768px) {
        .profile-container {
            padding: 20px;
        }

        .profile-header {
            margin-bottom: 30px;
            padding-bottom: 20px;
        }

        .profile-img {
            width: 100px;
            height: 100px;
        }

        .profile-name {
            font-size: 24px;
        }

        .profile-position {
            font-size: 14px;
        }

        .profile-details {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .profile-detail-item {
            padding: 10px;
        }

        .profile-actions {
            justify-content: center;
        }

        .logout-btn {
            width: 30vw;
            max-width: 150px;
        }

        .profile-title {
            gap: 10px;
        }

        .page-title {
            font-size: 20px;
        }
    }

    @@media (max-width: 480px) {
        .profile-container {
            padding: 15px;
        }

        .profile-img {
            width: 80px;
            height: 80px;
        }

        .profile-name {
            font-size: 20px;
        }

        .profile-position {
            font-size: 12px;
        }

        .profile-detail-item {
            padding: 8px;
        }

        .detail-label, .profile-detail {
            font-size: 14px;
        }

        .profile-actions {
            justify-content: center;
        }

        .logout-btn {
            width: 40vw;
            max-width: 120px;
            padding: 10px 15px;
            font-size: 14px;
        }

        .profile-title {
            gap: 8px;
        }

        .page-title {
            font-size: 18px;
        }
    }

    /* Animation */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>